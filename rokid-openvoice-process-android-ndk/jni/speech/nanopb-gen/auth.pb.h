/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Thu Jan 18 12:56:44 2018. */

#ifndef PB_ROKID_OPEN_SPEECH_AUTH_PB_H_INCLUDED
#define PB_ROKID_OPEN_SPEECH_AUTH_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _rokid_open_speech_AuthErrorCode {
    rokid_open_speech_AuthErrorCode_SUCCESS = 0,
    rokid_open_speech_AuthErrorCode_AUTH_FAILED = 1
} rokid_open_speech_AuthErrorCode;
#define _rokid_open_speech_AuthErrorCode_MIN rokid_open_speech_AuthErrorCode_SUCCESS
#define _rokid_open_speech_AuthErrorCode_MAX rokid_open_speech_AuthErrorCode_AUTH_FAILED
#define _rokid_open_speech_AuthErrorCode_ARRAYSIZE ((rokid_open_speech_AuthErrorCode)(rokid_open_speech_AuthErrorCode_AUTH_FAILED+1))

/* Struct definitions */
typedef struct _rokid_open_speech_AuthRequest {
    pb_callback_t key;
    pb_callback_t device_type_id;
    pb_callback_t device_id;
    pb_callback_t service;
    pb_callback_t version;
    pb_callback_t timestamp;
    pb_callback_t sign;
/* @@protoc_insertion_point(struct:rokid_open_speech_AuthRequest) */
} rokid_open_speech_AuthRequest;

typedef struct _rokid_open_speech_AuthResponse {
    rokid_open_speech_AuthErrorCode result;
/* @@protoc_insertion_point(struct:rokid_open_speech_AuthResponse) */
} rokid_open_speech_AuthResponse;

/* Default values for struct fields */

/* Initializer values for message structs */
#define rokid_open_speech_AuthRequest_init_default {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define rokid_open_speech_AuthResponse_init_default {(rokid_open_speech_AuthErrorCode)0}
#define rokid_open_speech_AuthRequest_init_zero  {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define rokid_open_speech_AuthResponse_init_zero {(rokid_open_speech_AuthErrorCode)0}

/* Field tags (for use in manual encoding/decoding) */
#define rokid_open_speech_AuthRequest_key_tag    1
#define rokid_open_speech_AuthRequest_device_type_id_tag 2
#define rokid_open_speech_AuthRequest_device_id_tag 3
#define rokid_open_speech_AuthRequest_service_tag 4
#define rokid_open_speech_AuthRequest_version_tag 5
#define rokid_open_speech_AuthRequest_timestamp_tag 6
#define rokid_open_speech_AuthRequest_sign_tag   7
#define rokid_open_speech_AuthResponse_result_tag 1

/* Struct field encoding specification for nanopb */
extern const pb_field_t rokid_open_speech_AuthRequest_fields[8];
extern const pb_field_t rokid_open_speech_AuthResponse_fields[2];

/* Maximum encoded size of messages (where known) */
/* rokid_open_speech_AuthRequest_size depends on runtime parameters */
#define rokid_open_speech_AuthResponse_size      2

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define AUTH_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
