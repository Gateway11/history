package com.rokid.rkcommonlibrary.mediaplayer;

import com.rokid.rkcommonlibrary.RKApplicationEX;
import com.rokid.rkcommonlibrary.utils.RKLogUtil;

import java.util.HashMap;
import java.util.Map;

/**
 * Created by Bassam on 16/8/5.
 */
public class RKMediaManger {

    private Map<String, RKMediaPlayer> mHashMap;
    private float mVolumeRate = 1.0f;
    /**
     * 当前类的实例对象
     */
    private static RKMediaManger instance;

    /**
     * 单例方法调用
     *
     * @return
     */
    public static RKMediaManger getInstance() {
        if (instance == null) {
            synchronized (RKMediaManger.class) {
                if (instance == null) {
                    instance = new RKMediaManger();
                }
            }
        }
        return instance;
    }

    public RKMediaManger() {
        mHashMap = new HashMap<>();
    }

    /**
     * 增加播放资源
     *
     * @param id
     * @param rkMediaDataBean
     * @param volume
     * @return
     */
    public boolean addResID(String id, RKMediaDataBean rkMediaDataBean, RKMediaPlayCallback
            rkMediaPlayCallback, float volume) {
        if (RKApplicationEX.getInstance() == null) {
            RKLogUtil.e("Con't get Application");
            return false;
        }
        RKMediaPlayer rkMediaPlayer;
        if (mHashMap.containsKey(id) && mHashMap.get(id) != null) {
            rkMediaPlayer = mHashMap.get(id);
            rkMediaPlayer.stop();
            mHashMap.remove(id);
        }
        rkMediaPlayer = new RKMediaPlayer(RKApplicationEX.getInstance().getApplicationContext(),
                rkMediaDataBean, rkMediaPlayCallback);
        rkMediaPlayer.setVolumeRate(mVolumeRate);
        rkMediaPlayer.setVolume(volume);
        mHashMap.put(id, rkMediaPlayer);
        return true;
    }

    /**
     * 移除播放资源
     *
     * @param resID
     */
    public void removeResID(String resID) {
        if (!mHashMap.containsKey(resID)) {
            RKLogUtil.w("res not exist.");
            return;
        }
        RKMediaPlayer musicPlayer = mHashMap.remove(resID);
        if (musicPlayer != null) {
            musicPlayer.stop();
        }
        mHashMap.remove(resID);
    }

    /**
     * 清理所有的音频
     */
    public void clearMediaPlayer() {
        stopAllMediaPlayer();
        mHashMap.clear();
    }

    /**
     * 开始所有的音频
     */
    public void startAllMediaPlayer() {
        for (String key : mHashMap.keySet()) {
            RKMediaPlayer musicPlayer = mHashMap.get(key);
            if (musicPlayer != null) {
                musicPlayer.start();
            }
        }
    }

    /**
     * 停止所有的声音
     */
    public void stopAllMediaPlayer() {
        for (String key : mHashMap.keySet()) {
            RKMediaPlayer musicPlayer = mHashMap.get(key);
            if (musicPlayer != null) {
                musicPlayer.stop();
            }
        }
    }

    public void startMediaPlayer(String resID) {
        if (!mHashMap.containsKey(resID)) {
            RKLogUtil.w("res not exist.");
            return;
        }
        RKMediaPlayer musicPlayer = mHashMap.remove(resID);
        if (musicPlayer != null) {
            musicPlayer.start();
        }
    }

    public void stopMeidaPlayer(String resID) {
        if (!mHashMap.containsKey(resID)) {
            RKLogUtil.w("res not exist.");
            return;
        }
        RKMediaPlayer musicPlayer = mHashMap.remove(resID);
        if (musicPlayer != null) {
            musicPlayer.stop();
        }
    }

    public void resumeMediaPlayer(String resID) {
        if (!mHashMap.containsKey(resID)) {
            RKLogUtil.w("res not exist.");
            return;
        }
        RKMediaPlayer musicPlayer = mHashMap.remove(resID);
        if (musicPlayer != null) {
            musicPlayer.resume();
        }
    }

    public void restartMediaPlayer(String resID) {
        if (!mHashMap.containsKey(resID)) {
            RKLogUtil.w("res not exist.");
            return;
        }
        RKMediaPlayer musicPlayer = mHashMap.remove(resID);
        if (musicPlayer != null) {
            musicPlayer.restart();
        }
    }

    public void pauseMediaPlayer(String resID) {
        if (!mHashMap.containsKey(resID)) {
            RKLogUtil.w("res not exist.");
            return;
        }
        RKMediaPlayer musicPlayer = mHashMap.remove(resID);
        if (musicPlayer != null) {
            musicPlayer.pause();
        }
    }

    public void stopMediaPlayer(String resID) {
        if (!mHashMap.containsKey(resID)) {
            RKLogUtil.w("res not exist.");
            return;
        }
        RKMediaPlayer musicPlayer = mHashMap.remove(resID);
        if (musicPlayer != null) {
            musicPlayer.stop();
        }
    }


}
