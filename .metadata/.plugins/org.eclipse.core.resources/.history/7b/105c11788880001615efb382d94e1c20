package com.rokid.rkcommonlibrary.ui.presenter;

import com.rokid.rkcommonlibrary.beans.RKEventBean;
import com.rokid.rkcommonlibrary.listener.RKOnLeftTouchListener;
import com.rokid.rkcommonlibrary.listener.RKOnRightTouchListener;

/**
 * Created by Bassam on 16/8/16.
 */
public class RKTouchPresenter {
    private RKOnLeftTouchListener onLeftTouchListener;
    private RKOnRightTouchListener onRightTouchListener;
    private RKEventBean oldLeftEvnetBean;
    private RKEventBean oldRightEvnetBean;
    /**
     * 当前类的实例对象
     */
    private static RKTouchPresenter instance;

    /**
     * 单例方法调用
     *
     * @return
     */
    public static RKTouchPresenter getInstance() {
        if (instance == null) {
            synchronized (RKTouchPresenter.class) {
                if (instance == null) {
                    instance = new RKTouchPresenter();
                }
            }
        }
        return instance;
    }

    /**
     * 设置左边的触摸事件
     *
     * @param onLeftTouchListener
     */
    public void setOnLeftTouchListener(RKOnLeftTouchListener onLeftTouchListener) {
        oldLeftEvnetBean = null;
        this.onLeftTouchListener = onLeftTouchListener;
    }

    /**
     * 设置右边的触摸事件
     *
     * @param onRightTouchListener
     */
    public void setOnRightTouchListener(RKOnRightTouchListener onRightTouchListener) {
        oldRightEvnetBean = null;
        this.onRightTouchListener = onRightTouchListener;
    }

    /**
     * 进行左边的事件处理
     *
     * @param eventBean
     * @return
     */
    public boolean doLeftTouchEventPresenter(RKEventBean eventBean) {
        if (onLeftTouchListener == null) {
            return false;
        } else {
            if (eventBean.getEvent().getValue() != 0) {
                if (oldLeftEvnetBean == null) {
                    oldLeftEvnetBean = eventBean;
                    onLeftTouchListener.onLeftTouchDown(oldLeftEvnetBean);
                } else {
                    onLeftTouchListener.onLeftTouchMove(eventBean);
                }
            } else {
                onLeftTouchListener.onLeftTouchUp();
                oldLeftEvnetBean = null;
            }
            return true;
        }
    }

    public boolean doRightTouchEventPresenter(RKEventBean eventBean) {
        if (onRightTouchListener == null) {
            return false;
        } else {
            if (eventBean.getEvent().getValue() != 0) {
                if (oldRightEvnetBean == null) {
                    oldRightEvnetBean = eventBean;
                    onRightTouchListener.onRightTouchDown(oldRightEvnetBean);
                } else {
                    onRightTouchListener.onRightTouchMove(eventBean);
                }
            } else {
                onRightTouchListener.onRightTouchUp();
                oldRightEvnetBean = null;
            }
            return true;
        }
    }
}

