package com.rokid.wifi;

import java.lang.reflect.Method;
import android.os.RemoteCallbackList;
import android.util.Log;
import rokid.os.IRKWifiManagerCallback;

public class RKWifiNotifier {
	private static final String TAG = "RKWifiNotifier";

	private RemoteCallbackList<IRKWifiManagerCallback> callbacks;
	private Method[] callbackMethods;

	public RKWifiNotifier() {
		callbacks = new RemoteCallbackList<IRKWifiManagerCallback>();
		callbackMethods = new Method[3];
		try {
			callbackMethods[0] = IRKWifiManagerCallback.class.getMethod("connected", boolean.class);
			callbackMethods[1] = IRKWifiManagerCallback.class.getMethod("disconnected");
			callbackMethods[2] = IRKWifiManagerCallback.class.getMethod("passwdError");
		} catch (NoSuchMethodException e) {
			Log.e(TAG, "interface IRKWifiManagerCallback's definition has mistake");
			e.printStackTrace();
		}
	}

	public void register(IRKWifiManagerCallback cb) {
		callbacks.register(cb);
	}

	public void unregister(IRKWifiManagerCallback cb) {
		callbacks.unregister(cb);
	}

	public void notifyConnected(boolean recovery) {
		invokeNotifyMethod(callbackMethods[0], recovery);
	}

	public void notifyDisconnected() {
		invokeNotifyMethod(callbackMethods[1]);
	}

	public void notifyPasswdError() {
		invokeNotifyMethod(callbackMethods[2]);
	}

	private void invokeNotifyMethod(Method method, Object... args) {
		int c, i;
		IRKWifiManagerCallback cb;

		callbacks.beginBroadcast();
		c = callbacks.getRegisteredCallbackCount();
		for (i=0; i<c; ++i) {
			cb = callbacks.getBroadcastItem(i);
			try {
				method.invoke(cb, args);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		callbacks.finishBroadcast();
	}
}
