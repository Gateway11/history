package com.example.demo;

import java.io.File;
import java.lang.reflect.Field;

import android.app.Application;
import android.os.Environment;
import android.util.Log;

public class MyApplication extends Application {
	@Override
	public void onCreate() {
		super.onCreate();
		String dexPath = Environment.getExternalStorageDirectory()
				.getAbsolutePath().concat("/patch_dex.jar");
		File file = new File(dexPath);
		if (file.exists()) {
			inject(dexPath);
			return;
		}
		Log.e("BugFixApplication", dexPath + "不存在");
	}

	private void inject(String dexPath) {
		try {
			Class<?> cl = Class.forName("dalvik.system.BaseDexClassLoader");

		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
	}

	private Object getField(Class<?> cl, String fieldName, Object obj)
			throws NoSuchFieldException, IllegalAccessException,
			IllegalArgumentException {
		Field field = cl.getDeclaredField(fieldName);
		field.setAccessible(true);
		return field.get(obj);
	}
}
